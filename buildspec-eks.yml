version: 0.2
run-as: root

env:
  variables:
    BUILD: 'version-$(date +%Y-%m-%d)'

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - . ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - chmod +x eks-cicd/prereqs.sh
      - sh eks-cicd/prereqs.sh
  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo $BUILD
      - echo check config
      - kubectl config view --minify
      - echo check kubectl access
      - aws eks update-kubeconfig --name $AWS_CLUSTER_NAME --region $AWS_DEFAULT_REGION
      - cat ~/.kube/config
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      # - docker pull $REPOSITORY_URI:$IMAGE_TAG

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - sh eks-cicd/start.sh
      #- docker build  -t $IMAGE_REPO_NAME:latest --build-arg REACT_APP_COGNITO_USER_POOL_ID=$REACT_APP_COGNITO_USER_POOL_ID --build-arg REACT_APP_COGNITO_CLIENT_ID=$REACT_APP_COGNITO_CLIENT_ID --build-arg REACT_APP_SOCKET_URL=$REACT_APP_SOCKET_URL --build-arg REACT_APP_API_URL=$REACT_APP_API_URL --build-arg GH_TOKEN=$GH_TOKEN .
      #- docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      #- docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
     # - echo Push the latest image to cluster
      #- kubectl apply -f eks-cicd/deployment.yaml
      #- kubectl apply -f eks-cicd/service.yaml
      #    - kubectl rollout restart -f eks-cicd/deployment.yaml
      #     - kubectl rollout restart -f eks-cicd/service.yaml
      - kubectl get svc -n dev
